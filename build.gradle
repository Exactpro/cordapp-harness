buildscript {
    ext {
        corda_release_group = "net.corda"
        corda_release_version = "4.1"
        corda_gradle_plugins_version = "4.0.45"
        quasar_version = "0.7.10"
        log4j_version = "2.11.2"
        slf4j_version = "1.7.25"
        corda_platform_version = 4

        testCordapp4 = "cordapp-sample:obligation-j:0.0.1"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

allprojects {
    repositories {
      mavenLocal()
      mavenCentral()
      jcenter()
      maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
      maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    }
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

// this is a fictional cordapp of this project
// it's harmless, though it's reported as a loaded cordapp
// to fix that add 'projectCordapp { deploy = false }' in node {}
cordapp {
    // silence a [jar] task warning
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "project"
        vendor "Exactpro"
        licence "Apache-2.0"
        versionId 1
    }
}

dependencies {
//  cordaRuntime "$corda_release_group:corda-core:$corda_release_version"
//  cordaRuntime "$corda_release_group:corda-jackson:$corda_release_version"
    cordaRuntime "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaRuntime "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    cordapp "$corda_release_group:corda-finance-contracts:$corda_release_version"
    cordapp "$corda_release_group:corda-finance-workflows:$corda_release_version"
    cordapp "$corda_release_group:corda-confidential-identities:$corda_release_version"
    cordapp "$testCordapp4"
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    nodeDefaults {
        projectCordapp { deploy = false }
        cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
        cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
        cordapp("$corda_release_group:corda-confidential-identities:$corda_release_version")
        cordapp("$testCordapp4")
     // rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : false]
        p2pPort 10001
        rpcSettings {
            address("localhost:10002")
            adminAddress("localhost:10003")
        }
        rpcUsers = [[ user: "userN", "password": "passwN", "permissions": ["ALL"]]]
        cordapps.clear()
    }
    node {
        name "O=PartyA,L=Austin,C=US"
        p2pPort 10011
        rpcSettings {
            address("localhost:10012")
            adminAddress("localhost:10013")
        }
        rpcUsers = [[ user: "userA", "password": "passwA", "permissions": ["ALL"]]]
     // extraConfig = [ 'sshd.port':'10014' ]
     // webPort 10015
    }
    node {
        name "O=PartyB,L=Bath,C=GB"
        p2pPort 10021
        rpcSettings {
            address("localhost:10022")
            adminAddress("localhost:10023")
        }
        rpcUsers = [[ user: "userB", "password": "passwB", "permissions": ["ALL"]]]
     // extraConfig = [ 'sshd.port': 10024 ]
     // webPort 10025
    }
    node {
        name "O=PartyC,L=Cologne,C=DE"
        p2pPort 10031
        rpcSettings {
            address("localhost:10032")
            adminAddress("localhost:10033")
        }
        rpcUsers = [[ user: "userC", "password": "passwC", "permissions": ["ALL"]]]
    }
}
